// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// jkmeansEM
Rcpp::List jkmeansEM(const arma::mat& y, int k, const arma::mat& meansIni, int steps, double tol, bool fixW, bool useKmeansIni, double sigma2_ini);
RcppExport SEXP jkmeans_jkmeansEM(SEXP ySEXP, SEXP kSEXP, SEXP meansIniSEXP, SEXP stepsSEXP, SEXP tolSEXP, SEXP fixWSEXP, SEXP useKmeansIniSEXP, SEXP sigma2_iniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type meansIni(meansIniSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type fixW(fixWSEXP);
    Rcpp::traits::input_parameter< bool >::type useKmeansIni(useKmeansIniSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_ini(sigma2_iniSEXP);
    rcpp_result_gen = Rcpp::wrap(jkmeansEM(y, k, meansIni, steps, tol, fixW, useKmeansIni, sigma2_ini));
    return rcpp_result_gen;
END_RCPP
}
// rDARC
Rcpp::List rDARC(const arma::mat& Y, int d, int k, const arma::mat& meansIni, int steps, double tol, bool randomStart, bool fixW, bool useEstep, double sigma2_ini, int ver);
RcppExport SEXP jkmeans_rDARC(SEXP YSEXP, SEXP dSEXP, SEXP kSEXP, SEXP meansIniSEXP, SEXP stepsSEXP, SEXP tolSEXP, SEXP randomStartSEXP, SEXP fixWSEXP, SEXP useEstepSEXP, SEXP sigma2_iniSEXP, SEXP verSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type meansIni(meansIniSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type randomStart(randomStartSEXP);
    Rcpp::traits::input_parameter< bool >::type fixW(fixWSEXP);
    Rcpp::traits::input_parameter< bool >::type useEstep(useEstepSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_ini(sigma2_iniSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    rcpp_result_gen = Rcpp::wrap(rDARC(Y, d, k, meansIni, steps, tol, randomStart, fixW, useEstep, sigma2_ini, ver));
    return rcpp_result_gen;
END_RCPP
}
// kmpp
Rcpp::List kmpp(const arma::mat& Y, int k);
RcppExport SEXP jkmeans_kmpp(SEXP YSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(kmpp(Y, k));
    return rcpp_result_gen;
END_RCPP
}
